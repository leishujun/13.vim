练习vim的地方
vimtutor

设置vim
全局设置：/etc/vimrc
个人设置：~/.vimrc


在编辑模式下的搜索框中输入：
：r filename    //   :r  读取文件的路径 
可以把filename文件中的内容写进当前正在编辑的文档中
同理可得
：w filename   //  :w 存档文件名字   
把正在编辑的文件存档到当前目录的一个文件中

:x=:wq=ZZ  保存退出
:q!=ZQ        不保存退出


!command   在编辑过程中要是需要执行某一条命令查看其结果再进行编辑时，我们可以用到这个方式
r!command  读取执行的命令的结果然后把它打印当前正在编辑的文档中


ctrl+v+[  在insert模式，也就是插入模式下按这三个键，可以输入颜色，输入后前面部分显示的是带颜色的，格式如下：
vi  a.sh
^[[1;32mhello!^[[0m
分成四部分
^[
[1;32mhello!
^[
[0m
两个带颜色的   ^[   是按了    ctrl+v+[   才出现的
此时再输入
cat  a.sh
就能看到绿色的hello了

以下按键都可以配合数字使用，换种说法就是按住“数字键”的同时还能按住下面的这些按键就能效果翻倍
{(web)} : 段落、句子、词首、词尾、前一词首
kjhl：上下左右  
gg或者1G：第一行
G：最后一行
HLM：本页的高低中行
^$0 ：开头结尾，0包括空白部分
:10  ：第10行
ctrl+f，b，d，u   翻本页的一屏半屏        du   first  blood   拿个一血
x：剪切
p：粘贴
xp：交换两个字符的前后顺序
~：转换大小写。大写gU，小写gu
J：删除前后的换行符，把两行合并
r：切换一个字符
R：换成切换字符模式
u：撤销更改
ctrl+r ：撤销u的操作
。：重复之前的操作

D：相当于d$，删除光标到行尾
Y：复制整行
C：删除整行并切换到插入模式
d$^ggG0web
y$^ggG0web
c$^ggG0web 删除之后切换成插入模式
3dd
3yy
3cc

10  i  wang  esc：复制wang10次
输入顺序：
1.输入次数
2.按”i“进入插入模式
3.输入要重复的字符串
4.按下”esc“键

光标位置+命令+结束位置：
例如
0y$：从行首开始复制当前内容到行尾



扩展命令模式，就是切换到搜索栏的模式
:2         :第二行
:2,+3    :第二行，第2+3行
。:当前行
$：最后一行
。，$    ：当前行到倒数第二行
%：全文。相当于1,$


:/开头/,/结束/操作
例如：
vim /etc/passwd
:/^root/,/^halt/d   --->删除 root开头的行  到  halt开头的行

:2,/^halt/d    --->删除从 第2行 到  halt开头的行
:/^halt/,$d    --->删除从   halt开头的行  到   最后一行

:/^halt/,$w filename  ----->把  halt开头的行  到  最后一行  的内容写进
当前目录下名叫  filename   的文件中

:1,$r  lei.sh   ---->把  lei.sh 中的 第一行到最会一行内容写进当前文件中
:%r /etc/passwd  ---> 把/etc/passwd下的所有东西写进当前文件中


/abc ：搜索abc
?abc ：反向搜索abc
n ： 下一个
N： 上一个

搜索替代
:s/查找的内容/替换的内容/修饰符号
:s@查找的内容@替换的内容@修饰符号
:s#查找的内容#替换的内容#修饰符号

修饰符号
i：忽略大小写
g：全局替换
gc：全局替换，但是每一次都会问


&,\1,\2  ：这些都可以代替前面搜索到的内容
比如：

:%s/abc/&de/g
:%s/abc/\1de/g

%：全局的意思
s：搜索并替换
/abc/：搜索abc
&：前面匹配的内容
\1:前面匹配的内容，grep基本正则表达式中的后向引用
/&de/：要替换的内容
g：替换所有的abc。如果不加g，就只是替换出现的第一个abc

:1,10s/bash/csh/g   搜索1-10行中所有的bash并全部替换成csh

:2s/  \/bin  /  \/usr\/bin  /g   把第2行中的/bin换成/usr/bin
:2s#/bin#/usr/bin#g        把第2行中的/bin换成/usr/bin

:%s/\(^[^#]\)/# \1/g    把非#开头的行全部替换成#开头的行
:%s/^[^#]/# &/g          把非#开头的行全部替换成#开头的行




支持26个字母命名寄存器、10个数字寄存器和1个无名寄存器

命令寄存器 {a..z} 26个字母，可以在不同会话中共享

10个数字寄存器，0-9表示，0表示最近复制的内容，1存放最近删除
的内容，当新的文本变更和删除时，1存到2，2存到3，以此类推。
数字寄存器不能在不同会话之间共享。

3''tyy      //复制3行到寄存器t中
3 ：3行
'' ：符号
t  ：字母寄存器
yy：复制

''tp     //把寄存器t中的内容进行粘贴
'' ：符号
t  ：字母寄存器
p  ：粘贴


编辑2进制文件
以二进制方式打开文件
vim  -b  binaryfile
扩展命令模式下，利用xxd命令转换为可读的16进制
:%!xxd
扩展模式下，转回二进制文件
:%!xxd -r




可视化模式
选中的目标可用来删除、复制、变更、过滤、搜索、替换
小   v ：半行半行的选中
大  V  ：整行整行的选中
ctrl +v ：自定义选中目标


多文件模式
：next    下一个
：prev    前一个
：first     第一个
：last      最后一个
：wall    所有都写入
：qall    退出所有
：wqall   保存并退出所有



多窗口
vim -o/-O file1 file2 file3  ......
-o：水平分割
-O：垂直分割
Arrow或ctrl+w：窗口切换


单文件窗口分割：
ctrl+w，s ----->水平分割
ctrl+w，v------>左右分割
ctrl+w，q------>取消相邻的分屏
ctrl+w，o------>取消所有的分屏


设置vim工作特性

set list                          显示换行符^I和$,这个在脚本中相对要重要一些
set  fileformat=dos     启用Windows格式
set  fileformat=unix    启用unix格式
上面两种的简写
set  ff=dos|unix        
set  cul                        显示标识线             set   cursorline  
syntax on/off               语法高亮

set nu  显示行号
set ic 忽略字符大小写
set ai 自动缩进       全称是  set  autoindend
set si 智能缩进
set hlsearch 高亮搜索
set paste  复制保留格式
set textwidth=65（启用）/15（禁用）  设置文本宽度
取消的话只要在前面加上”no“就行，其他的以此类推
set nonu  取消显示行号



